(function($) {

	$.fn.unveil = function(threshold) {

		var $w = $(window),
			th = threshold || 0,
			retina = window.devicePixelRatio > 1,
			attrib = retina? "data-src-retina" : "data-src",
			images = this,
			loaded,
			inview,
			source;

		this.one("unveil", function() {
			source = this.getAttribute(attrib);
			source = source || this.getAttribute("data-src");
			if (source) {
				this.setAttribute("src", source);
				this.setAttribute("class", this.getAttribute("class").split(" ")[0]);
			}
		});

		function unveil() {
			inview = images.filter(function() {
				var $e = $(this),
					wt = $w.scrollTop(),
					wb = wt + $w.height(),
					et = $e.offset().top,
					eb = et + $e.height();
				return eb >= wt - th && et <= wb + th;
			});

			loaded = inview.trigger("unveil");
			//images = images.not(loaded);
		}

		$w.scroll(unveil);
//		$w.resize(unveil);

		unveil();

		return this;

	};

})(jQuery);

(function(){

	var special = jQuery.event.special,
		uid1 = 'D' + (+new Date()),
		uid2 = 'D' + (+new Date() + 1);

	special.scrollstart = {
		setup: function() {

			var timer,
				handler =  function(evt) {

					var _self = this,
						_args = arguments;

					if (timer) {
						clearTimeout(timer);
					} else {
						evt.type = 'scrollstart';
						jQuery.event.handle.apply(_self, _args);
					}

					timer = setTimeout( function(){
						timer = null;
					}, special.scrollstop.latency);

				};

			jQuery(this).bind('scroll', handler).data(uid1, handler);

		},
		teardown: function(){
			jQuery(this).unbind( 'scroll', jQuery(this).data(uid1) );
		}
	};

	special.scrollstop = {
		latency: 300,
		setup: function() {

			var timer,
				handler = function(evt) {

					var _self = this,
						_args = arguments;

					if (timer) {
						clearTimeout(timer);
					}

					timer = setTimeout( function(){

						timer = null;
						evt.type = 'scrollstop';
						jQuery.event.handle.apply(_self, _args);

					}, special.scrollstop.latency);

				};

			jQuery(this).bind('scroll', handler).data(uid2, handler);

		},
		teardown: function() {
			jQuery(this).unbind( 'scroll', jQuery(this).data(uid2) );
		}
	};

})();

function lazyload(parent, children, n) {
	$(parent).bind("scrollstart", function(e) {
		$(children).unveil();
	}).bind("scrollstop", function(e) {
		$(children).unveil();
	});
}

Spank.history.renderStream.subscribe(function() {
	$(".tweetThumb.veiled").unveil();
})

Spank.charts.chartTracks.subscribe(function() {
	$(".mxThumb.veiled:lt(20)").unveil();
})

lazyload("#resultsSection", ".mxThumb.veiled:lt(20)")
lazyload("#history-stream-list-container", ".tweetThumb.veiled:lt(30)")